name: Javascript client package

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: self-hosted # ubuntu-latest
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - id: npm-package-tag
        name: Determine NPM tag for package
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            NPM_TAG="nightly"
          elif [[ $GITHUB_REF == refs/heads/develop ]]; then
            NPM_TAG="next"
          elif [[ $GITHUB_REF == refs/tags/v*-* ]]; then
            NPM_TAG=next
          elif [[ $GITHUB_REF == refs/tags/v* ]]; then
            NPM_TAG=latest
          fi
          echo "NPM_TAG=${NPM_TAG}" >> $GITHUB_ENV
          echo "npm_tag=${NPM_TAG}" >> $GITHUB_OUTPUT
      - id: go-fixup
        # Workaround for setup-go on self-hosted runner, without a $HOME
        name: Go fixup
        run: |
          echo "GOMODCACHE=/opt/go-cache/mod" >> $GITHUB_ENV
          echo "GOCACHE=/opt/go-cache/build" >> $GITHUB_ENV
      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version-file: "./go.mod"
          cache: false # no use on self-hosted runner
      - run: go version
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: package.json
          registry-url: "https://npm.pkg.github.com"
          scope: "@momentum-xyz"
      - id: npm-deps
        name: Install dependencies
        run: npm ci --ignore-scripts
      - id: test
        name: Test go client
        run: make test
      - id: build
        name: Build javascript client
        run: make -j4 js
      - id: publish
        name: Publish NPM package
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish --tag "${{ steps.npm-package-tag.outputs.npm_tag }}"
